<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Honey Young</title>
  
  <subtitle>小杨鹤</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-24T08:17:18.524Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>honey young</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人技能</title>
    <link href="http://yoursite.com/2018/05/23/%E4%B8%AA%E4%BA%BA%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/05/23/个人标签/</id>
    <published>2018-05-23T07:23:29.000Z</published>
    <updated>2018-05-24T08:17:18.524Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="个人技能" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="CSS3" scheme="http://yoursite.com/tags/CSS3/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="Ajax" scheme="http://yoursite.com/tags/Ajax/"/>
    
      <category term="AngularJS" scheme="http://yoursite.com/tags/AngularJS/"/>
    
      <category term="BOM" scheme="http://yoursite.com/tags/BOM/"/>
    
      <category term="Bower" scheme="http://yoursite.com/tags/Bower/"/>
    
      <category term="Cookie" scheme="http://yoursite.com/tags/Cookie/"/>
    
      <category term="DOM" scheme="http://yoursite.com/tags/DOM/"/>
    
      <category term="EJS" scheme="http://yoursite.com/tags/EJS/"/>
    
      <category term="Express" scheme="http://yoursite.com/tags/Express/"/>
    
      <category term="Gulp" scheme="http://yoursite.com/tags/Gulp/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="HTML5" scheme="http://yoursite.com/tags/HTML5/"/>
    
      <category term="JSON" scheme="http://yoursite.com/tags/JSON/"/>
    
      <category term="MongoDB" scheme="http://yoursite.com/tags/MongoDB/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
      <category term="RequireJS" scheme="http://yoursite.com/tags/RequireJS/"/>
    
      <category term="SeaJs" scheme="http://yoursite.com/tags/SeaJs/"/>
    
      <category term="Session" scheme="http://yoursite.com/tags/Session/"/>
    
      <category term="Underscore" scheme="http://yoursite.com/tags/Underscore/"/>
    
      <category term="bolg" scheme="http://yoursite.com/tags/bolg/"/>
    
      <category term="browser" scheme="http://yoursite.com/tags/browser/"/>
    
      <category term="canvas" scheme="http://yoursite.com/tags/canvas/"/>
    
      <category term="cordova" scheme="http://yoursite.com/tags/cordova/"/>
    
      <category term="eCharts" scheme="http://yoursite.com/tags/eCharts/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="http" scheme="http://yoursite.com/tags/http/"/>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
      <category term="Grunt" scheme="http://yoursite.com/tags/Grunt/"/>
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="mine" scheme="http://yoursite.com/tags/mine/"/>
    
      <category term="net" scheme="http://yoursite.com/tags/net/"/>
    
      <category term="network" scheme="http://yoursite.com/tags/network/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="nrm" scheme="http://yoursite.com/tags/nrm/"/>
    
      <category term="nvm" scheme="http://yoursite.com/tags/nvm/"/>
    
      <category term="tools" scheme="http://yoursite.com/tags/tools/"/>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
      <category term="artTemplate" scheme="http://yoursite.com/tags/artTemplate/"/>
    
      <category term="ps" scheme="http://yoursite.com/tags/ps/"/>
    
      <category term="sublime" scheme="http://yoursite.com/tags/sublime/"/>
    
      <category term="webstorm" scheme="http://yoursite.com/tags/webstorm/"/>
    
      <category term="vs code" scheme="http://yoursite.com/tags/vs-code/"/>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
      <category term="eclipse" scheme="http://yoursite.com/tags/eclipse/"/>
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="小项目" scheme="http://yoursite.com/tags/%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="库" scheme="http://yoursite.com/tags/%E5%BA%93/"/>
    
      <category term="性能优化" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="模块化" scheme="http://yoursite.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
      <category term="正则" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99/"/>
    
      <category term="表单" scheme="http://yoursite.com/tags/%E8%A1%A8%E5%8D%95/"/>
    
      <category term="面向对象" scheme="http://yoursite.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title>js变量和数据类型</title>
    <link href="http://yoursite.com/2015/06/03/js%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2015/06/03/js变量和数据类型/</id>
    <published>2015-06-02T16:00:00.000Z</published>
    <updated>2018-05-30T03:24:56.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>JavaScript是弱类型的语言，变量是松散的。所谓松散是可以保存任何类型的变量。即声明不同数据类型的变量使用同一个关键字 <code>var</code>，变量就是变化的量，变量的作用就是用来装数据的容器。声明变量的时候不用考虑类型，但是处理和计算的时候要考虑类型.</p><a id="more"></a><h3 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h3><p>定义变量使用关键字 <code>var</code>来定义变量名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在全局作用域下声明了变量 a</span></span><br><span class="line"><span class="keyword">var</span> a; </span><br><span class="line"><span class="comment">// 使用赋值运算符来给变量赋值</span></span><br><span class="line">a = <span class="string">"a此时是字符串"</span>;</span><br></pre></td></tr></table></figure><p>赋值：</p><ul><li>赋值运算符为“=”，这个等号不用判断两者是否相同。</li><li>如果判断是否相同，可使用==（===）。</li></ul><p>以上两步可简写为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"a此时是字符串"</span>;</span><br></pre></td></tr></table></figure><p>注意：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  msg = <span class="string">"我是函数内部定义的全局变量"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面例子省略了<code>var</code>操作符， msg 就变成了全局变量，函数外部也能访问到，但不要这样做！。</p><h3 id="变量命名规范"><a href="#变量命名规范" class="headerlink" title="变量命名规范"></a>变量命名规范</h3><ul><li>由字母、数字、下划线、$ 组成且开头不能是数字定义变量名。</li><li>不能使用特殊符号或者特殊符号开头来定义变量名（_除外）。</li><li>不能以关键字来定义变量名</li><li>变量的名称要有实际意义</li><li>规则中所说的字母包括ASCII和Unicode字母字符，如汉字，但不推荐使用</li><li><p>变量的命名遵守驼峰命名法，首字母小写,第二个单词的首字母大写 例如：userName</p><ul><li>关键字</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span>        <span class="keyword">do</span>          <span class="keyword">instanceof</span>     <span class="keyword">typeof</span></span><br><span class="line"><span class="keyword">case</span>         <span class="keyword">else</span>        <span class="keyword">new</span>            <span class="keyword">var</span></span><br><span class="line"><span class="keyword">catch</span>        <span class="keyword">finally</span>     <span class="keyword">return</span>         <span class="keyword">void</span></span><br><span class="line"><span class="keyword">continue</span>     <span class="keyword">for</span>         <span class="keyword">switch</span>         <span class="keyword">while</span></span><br><span class="line"><span class="keyword">debugger</span>*    <span class="function"><span class="keyword">function</span>    <span class="title">this</span>           <span class="title">with</span></span></span><br><span class="line"><span class="function"><span class="title">default</span>      <span class="title">if</span>          <span class="title">throw</span></span></span><br><span class="line"><span class="function"><span class="title">delete</span>       <span class="title">in</span>          <span class="title">try</span></span></span><br></pre></td></tr></table></figure><ul><li>不能使用保留字来定义变量名 (保留字)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">abstract        enum         int           short</span><br><span class="line">boolean         <span class="keyword">export</span>       interface     <span class="keyword">static</span></span><br><span class="line">byte            extends      long          <span class="keyword">super</span></span><br><span class="line">char            final        native        synchronized</span><br><span class="line"><span class="class"><span class="keyword">class</span>           <span class="title">float</span>        <span class="title">package</span>       <span class="title">throws</span></span></span><br><span class="line"><span class="class"><span class="title">const</span>           <span class="title">goto</span>         <span class="title">private</span>       <span class="title">transient</span></span></span><br><span class="line"><span class="class"><span class="title">debugger</span>        <span class="title">implements</span>   <span class="title">protected</span>     <span class="title">volatile</span></span></span><br><span class="line"><span class="class"><span class="title">double</span>          <span class="title">import</span>       <span class="title">public</span></span></span><br></pre></td></tr></table></figure><p>注意：在JS中，是严格区分大小写的。</p><h3 id="执行环境和作用域"><a href="#执行环境和作用域" class="headerlink" title="执行环境和作用域"></a>执行环境和作用域</h3><p>执行环境是 JavaScript 中最为重要的一个概念。定义了变量或函数有权访问其它数据。每个环境中都有一个与之关联的变量对象，我们编写的代码无法访问，但是环境中定义的变量存放在这个对象中。</p><p>全局执行环境是最外围的一个执行环境。根据 ECMAScript 实现所在的宿主环境的不同，表示执行环境的对象也不一样。在 web 浏览器中，全局执行环境被认为是 window 对象，因此所有的全局变量和函数都是作为 window 对象的属性和方法创建的。某个环境中的代码全部执行完，该环境中的变量被销毁，保存在其中的所有的变量和函数定义也随之销毁。全局执行环境直到应用程序退出才销毁。</p><p>每个函数都有自己的执行环境。当代码在一个环境中执行时，会创建作用域链。作用域链式保证对执行环境有权访问的所有变量和函数的有序访问。作用域的前端始终都是当前执行的代码所在环境的变量对象。如果这个环境是函数，则将其活动对象作为变量对象。活动对象在最开始的时候只包含一个变量，即 arguments 对象。作用域中的下一个变量对象来说包含（外部的环境），而再下一个变量对象则来自下一个包含环境。这样，一直延续到全局执行环境，全局执行环境的变量对象始终都是作用域链中的最后一个对象。</p><p>一个变量的作用域是程序源代码中定义这个变量的区域。全局变量拥有全局作用域，在 JavaScript 代码中任何地方都是有定义的。而在函数内部声明的变量只有在函数体内有定义，它们是局部变量，作用域是局部的。</p><p>在函数体内部，局部变量的优先级高于同名的全局变量。</p><h4 id="函数作用域和声明提前"><a href="#函数作用域和声明提前" class="headerlink" title="函数作用域和声明提前"></a>函数作用域和声明提前</h4><p>块级作用域是指在一对花括号内的代码都具有各自的作用域，而且变量在声明它们的代码之外是不可见的。但是 JavaScript 没有块级作用域的概念。而是使用了函数作用域。JavaScript 的函数作用域是指函数内声明的所有变量在函数体内始终是可见的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;                          <span class="comment">// i 在整个函数体内部有定义</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> o == <span class="string">'object'</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> j = <span class="number">0</span>;                        <span class="comment">// j 在函数体内有定义</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)&#123;      <span class="comment">// k 在函数体内是有定义的，不仅仅是在循环内</span></span><br><span class="line">      <span class="built_in">console</span>.log(k);                 <span class="comment">// 输出 0~9</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(k);                   <span class="comment">// 输出 10</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(j);                     <span class="comment">// j 已经定义了，但是可能没有初始化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作为属性的变量"><a href="#作为属性的变量" class="headerlink" title="作为属性的变量"></a>作为属性的变量</h4><p>当声明一个变量时，实际上是定义了一个全局对象的一个属性，当使用 var 声明变量时，创建的这个对象是不可配置的，也就是说这个变量不能通过 delete 操作符来删除。如果在非严格模式下，给一个未声明的全局变量赋值的话， JavaScript 会自动创建一个全局变量。以这种方式创建的变量是全局对象的正常的可配置属性，并且可以删除它们。</p><h4 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h4><p>嵌套的函数体内部，可以访问它上一级作用域中的变量。</p><p>延长作用域链：</p><ul><li>try-catch 语句</li><li>with 语句</li></ul><h2 id="垃圾收集"><a href="#垃圾收集" class="headerlink" title="垃圾收集"></a>垃圾收集</h2><ul><li>标记清除</li><li>引用计数</li><li>性能问题</li><li>管理内存</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>javaScript 数据类型有两类： 基本数据类型 和 复杂数据类型，其中基本数据类型（简单类型）有： Number/String/Boolean/Uundefined/Null一种复杂数据类型：object：Array/Date/Math/RegExp/</p><h3 id="typeof-操作符"><a href="#typeof-操作符" class="headerlink" title="typeof 操作符"></a>typeof 操作符</h3><ul><li>“undefined” –&gt; 这个值未定义</li><li>“boolean” –&gt; 这个值是布尔值</li><li>“string” –&gt; 这个只是字符串</li><li>“number” –&gt; 这个值是数值</li><li>“object” –&gt; 这个值是对象或null</li><li>“function” –&gt; 这个值是函数</li></ul><p>typeof 操作符号后面的操作数可以是变量，也可以是字面量；</p><p>typeof 误区：</p><ul><li>null 值返回 “object”;</li><li>Safari5 以及之前的版本、Chrome7 以及之前的版本对正则表达式调用返回”object”，</li><li>其他浏览器在这种情况下返回”object”</li><li>未初始化的变量和没有定义的变量操作符 typeof 都返回 “undefined”， 但它们有本质区别</li></ul><h3 id="Number-数据类型"><a href="#Number-数据类型" class="headerlink" title="Number 数据类型"></a>Number 数据类型</h3><p>字面量： var num = 数字;</p><p>包括正数，负数，小数</p><ul><li>取值范围：<ul><li>能表示的最大值是±1.7976931348623157乘以10的308次方</li><li>能表示的最小值是±5 乘以10的-324次方</li></ul></li><li>表示方式<ul><li>十进制</li><li>十六进制 以 0x 开头，从 0-9，a(A) 到 f（F）的范围。</li><li>八进制 以 0 开头，0-7 组成。</li></ul></li><li>NaN (not a number) 也是 number 类型，NaN 不等于自身</li><li><p>两个都为字符串的变量相减，得到的是NaN.</p></li><li><p>浮点数：</p><ul><li>计算浮点数时会丢失精度</li><li>通常用整数的计算来表示浮点数的计算</li><li>不要以两个浮点数是否相等作为条件判断的依据（判断范围还是可以的）</li></ul></li></ul><h2 id="String-字符串类型"><a href="#String-字符串类型" class="headerlink" title="String,字符串类型"></a>String,字符串类型</h2><p>字面量： var str = “字符串”;</p><p>字符串的长度： str.length;</p><ul><li>凡是用””或者’’引起来的全是字符串类型。</li></ul><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><ul><li>\” 转双引号</li><li>\’ 转单引</li><li>\r 回车</li><li>\n 换行</li><li>\t 制表符</li><li>\f 进纸</li><li>\xnn 以十六进制表示一个字符(n 是 0~F)</li><li>\unnnn 以十六进制代码nnnn表示一个 Unicode 字符 (n 是 0~F)</li></ul><h3 id="字符串的特点"><a href="#字符串的特点" class="headerlink" title="字符串的特点"></a>字符串的特点</h3><p>ECMAScript 中的字符串是不可变的，也就是说，字符串一旦创建，它们的直就不能改变。要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含心智的字符串填充该变量。如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"Java"</span>;</span><br><span class="line">str = str + <span class="string">"Script"</span>;</span><br></pre></td></tr></table></figure><h3 id="转换为字符串"><a href="#转换为字符串" class="headerlink" title="转换为字符串"></a>转换为字符串</h3><p>数值、布尔值、对象和字符串值都有 <code>toString()</code>方法, 但是 null 和 undefined 没用这个方法。</p><p>调用toString() 方法时，大多数情况下不传参数，但是如果传递了一个参数，输出数值的基数。默认情况下，toString() 方法以十进制格式返回数值字符串表示。而通过传递基数，可以输出对应的二进制、八进制、十六进制。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(n.toString());   <span class="comment">// "10"</span></span><br><span class="line"><span class="built_in">console</span>.log(n.toString(<span class="number">2</span>));   <span class="comment">// "1010"</span></span><br><span class="line"><span class="built_in">console</span>.log(n.toString(<span class="number">8</span>));   <span class="comment">// "12"</span></span><br><span class="line"><span class="built_in">console</span>.log(n.toString(<span class="number">10</span>));   <span class="comment">// "10"</span></span><br><span class="line"><span class="built_in">console</span>.log(n.toString(<span class="number">16</span>));   <span class="comment">// "a"</span></span><br></pre></td></tr></table></figure><p>在不知道要转换的值是什么类型的时候，可以用 String() 函数，它可以将任意类型转成字符串。</p><h2 id="Boolean-布尔类型"><a href="#Boolean-布尔类型" class="headerlink" title="Boolean 布尔类型"></a>Boolean 布尔类型</h2><ul><li>布尔数据类型两个数据值: true/false</li><li>实际运算中，true 代表1, false代表0;</li></ul><h2 id="Undefined-表示声明但未赋值的变量"><a href="#Undefined-表示声明但未赋值的变量" class="headerlink" title="Undefined 表示声明但未赋值的变量"></a>Undefined 表示声明但未赋值的变量</h2><p>在 js 中，一下四种情况的返回值是 undefined</p><ul><li>变量声明了但没有赋值</li><li>函数没有返回值默认返回undefined</li><li>函数传递的实参个数少于形参个数时，未传递的参数值为undefined</li><li>对象没有定义的属性默认为undefined</li></ul><h2 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h2><p>用 <code>typeof</code>判断时值为 <code>object</code>(值为空)/引用为空，内存里找不到这个变量。</p><p>再如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> == <span class="literal">null</span>);  <span class="comment">// true 两等号判断，两边都转成false</span></span><br></pre></td></tr></table></figure><p>总的来说，只要意在保存对象的变量还没有真正保存对象，就应该让该变量保存 null 值，这样做体现了 null 作为空对象指针的惯例，也区分了 undefined 和 null。</p><h2 id="复杂类型（来自JavaScript高级程序设计）"><a href="#复杂类型（来自JavaScript高级程序设计）" class="headerlink" title="复杂类型（来自JavaScript高级程序设计）"></a>复杂类型（来自JavaScript高级程序设计）</h2><ul><li>object 对象</li></ul><p>ECMAScript 中的对象就是一组数据和功能的集合。可以通过 new 操作符后跟要创建的对象类型的名称来创建。而创建 Object 类型的实例并为其添加属性或方法，就可以创建自定义对象，如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br></pre></td></tr></table></figure><h3 id="Object的每个实例具有的属性和方法"><a href="#Object的每个实例具有的属性和方法" class="headerlink" title="Object的每个实例具有的属性和方法"></a>Object的每个实例具有的属性和方法</h3><ul><li>constructor： 保存着用于创建当前对象的函数，即构造函数。</li><li>hasOwnProperty(propertyName): 用于检查给定的属性在当前对象的实例中(而不是在原型中)存在；参数是字符串。</li><li>isPrototypeOf(object): 检查传入的对象是否是传入对象的原型。</li><li>propertyIsEnumerable(propertyName): 检查给定的属性是否能够使用 for-in 语言来枚举。参数是字符串。</li><li>toLocalString(): 返回对象的字符串表示，该字符串与执行环境的地区对应。</li><li>toString(): 返回对象的字符串表示。</li><li>valueOf(): 返回对象的字符串、数值、或布尔值表示。通常与 toString() 方法的返回值相同。</li></ul><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><p>隐式数据类型转换</p><p>变量参与到运算中，程序对变量进行的数据类型转换（不是程序员进行的数据类型）</p><p>强制数据类型转换</p><ul><li>将数字转换为字符串<ul><li>String</li><li>变量.toString ，注意：null 和 undefined 没有 toString() 方法</li></ul></li><li>将字符串转换为数字<ul><li>Number<ul><li>转换后保留原数据，不会对数据进行四舍五入。</li><li>非数字类型字符串转换后，比如 undefined，得到 NaN 。</li><li>如果字符串中包含有效的十六进制格式，则将其转换为相同大小的十进制整数值。</li></ul></li><li>parseInt<ul><li>对小数转换后保留的是整数部分，不会对数据进行四舍五入。</li><li>如果是数字后边有非数字字符串，转换后得到的是前边数字的整数部分。</li></ul></li><li>parseFloat<ul><li>转换为数字类型之后保留原数据，不进行四舍五入。</li><li>非数字类型字符串转换后，得到 NaN 。</li><li>如果是数字后边有非数字字符串，转换后得到的是前边数字的部分。</li></ul></li></ul></li><li>将其他类型转换为布尔类型：所有类型的值都可以转化成布尔值<ul><li>Boolean</li><li>会转化成false的值有：<ul><li>空字符串</li><li>数值零</li><li>NaN</li><li>undefined</li><li>null</li></ul></li></ul></li></ul><p>假值：空字符串””/数字0/null/undefined/false/NaN</p><h2 id="基本数据类型和复杂数据类型总结"><a href="#基本数据类型和复杂数据类型总结" class="headerlink" title="基本数据类型和复杂数据类型总结"></a>基本数据类型和复杂数据类型总结</h2><ul><li>基本类型—值类型— String Undefined Number Boolean Null</li><li><p>复杂类型—引用类型– Object 数组–Array,Date….</p></li><li><p>基本类型的值存储在—- 栈中</p></li><li><p>复杂类型的地址(引用)存储在栈中,—地址指向的空间中的对象(对象)—对象存储在堆中</p><ul><li>创建对象并返回对象—返回的是对象的地址(对象在堆空间中的地址)</li></ul></li><li><p>基本类型传值的时候，传递的是值</p></li><li><p>复杂类型(引用类型)传递的时候,传递的是:地址(引用)</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;p&gt;JavaScript是弱类型的语言，变量是松散的。所谓松散是可以保存任何类型的变量。即声明不同数据类型的变量使用同一个关键字 &lt;code&gt;var&lt;/code&gt;，变量就是变化的量，变量的作用就是用来装数据的容器。声明变量的时候不用考虑类型，但是处理和计算的时候要考虑类型.&lt;/p&gt;
    
    </summary>
    
      <category term="JS系列" scheme="http://yoursite.com/categories/JS%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js词法结构</title>
    <link href="http://yoursite.com/2015/06/01/js%E8%AF%8D%E6%B3%95%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2015/06/01/js词法结构/</id>
    <published>2015-05-31T16:00:00.000Z</published>
    <updated>2018-05-30T02:32:49.736Z</updated>
    
    <content type="html"><![CDATA[<p>js 的词法结构是一套基本规则，用来描述如何使用 js 编程。它规定了如何变量名长什么样，如何写注释以及程序语句之间如何分隔。</p><a id="more"></a><h2 id="字符集（JavaScript权威指南）"><a href="#字符集（JavaScript权威指南）" class="headerlink" title="字符集（JavaScript权威指南）"></a>字符集（JavaScript权威指南）</h2><h3 id="区分大小写"><a href="#区分大小写" class="headerlink" title="区分大小写"></a>区分大小写</h3><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>关键字、变量名、函数名、函数参数和所有标识符都是采用一致的大小写。</p><ul><li>第一个字符必须是一个字母、下划线(_)或一个美元符($)；</li><li>其它字符可以是字母、下划线、美元符号或者数字</li><li>驼峰命名法</li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>js 没有使用但保留的关键字</p><p><code>class const enum export extends import super</code></p><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><ul><li>js已经使用的关键字</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span>     <span class="keyword">delete</span>   <span class="function"><span class="keyword">function</span>    <span class="title">return</span>    <span class="title">typeof</span></span></span><br><span class="line"><span class="function"><span class="title">case</span>      <span class="title">do</span>       <span class="title">if</span>          <span class="title">switch</span>    <span class="title">var</span> </span></span><br><span class="line"><span class="function"><span class="title">catch</span>     <span class="title">else</span>     <span class="title">in</span>          <span class="title">this</span>      <span class="title">void</span> </span></span><br><span class="line"><span class="function"><span class="title">continue</span>  <span class="title">false</span>    <span class="title">instanceof</span>  <span class="title">throw</span>     <span class="title">while</span></span></span><br><span class="line"><span class="function"><span class="title">debugger</span>  <span class="title">finally</span>  <span class="title">new</span>         <span class="title">true</span>      <span class="title">with</span></span></span><br><span class="line"><span class="function"><span class="title">default</span>   <span class="title">for</span>      <span class="title">null</span>        <span class="title">try</span></span></span><br></pre></td></tr></table></figure><ul><li>严格模式下的保留字</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">implements <span class="keyword">let</span> private public <span class="keyword">yield</span></span><br><span class="line">interface  package protected <span class="keyword">static</span></span><br><span class="line"><span class="built_in">arguments</span> <span class="built_in">eval</span></span><br></pre></td></tr></table></figure><ul><li>js 尽量避免使用的标识符</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">abstract  double   goto        native     atatic</span><br><span class="line">boolean   enum     implements  package    <span class="keyword">super</span></span><br><span class="line">byte      <span class="keyword">export</span>   <span class="keyword">import</span>      private    synchronized</span><br><span class="line">char      extends  int         protected  throws</span><br><span class="line"><span class="class"><span class="keyword">class</span>     <span class="title">final</span>    <span class="title">interface</span>   <span class="title">public</span>     <span class="title">transient</span></span></span><br><span class="line"><span class="class"><span class="title">const</span>     <span class="title">float</span>    <span class="title">long</span>        <span class="title">short</span>      <span class="title">volatiole</span></span></span><br></pre></td></tr></table></figure><ul><li>js 预定义的全局变量和函数名</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">arguments</span>           <span class="built_in">encodeURI</span>  <span class="literal">Infinity</span>  <span class="built_in">Number</span>          <span class="built_in">RegExp</span></span><br><span class="line">encodeURICompnent   <span class="built_in">Array</span>      <span class="built_in">isFinite</span>  <span class="built_in">Object</span>          <span class="built_in">String</span></span><br><span class="line"><span class="built_in">Boolean</span>             <span class="built_in">Error</span>      <span class="built_in">isNaN</span>     <span class="built_in">parseFloat</span>      <span class="built_in">SyntaxError</span> </span><br><span class="line"><span class="built_in">Date</span>                <span class="built_in">eval</span>       <span class="built_in">JSON</span>      <span class="built_in">parseInt</span>        <span class="built_in">TypeError</span></span><br><span class="line"><span class="built_in">decodeURI</span>           <span class="built_in">EvalError</span>  <span class="built_in">Math</span>      <span class="built_in">RangeError</span>      <span class="literal">undefined</span></span><br><span class="line"><span class="built_in">decodeURIComponent</span>  <span class="built_in">Function</span>   <span class="literal">NaN</span>       <span class="built_in">ReferenceError</span>  <span class="built_in">URIError</span></span><br></pre></td></tr></table></figure><h3 id="空格、换行符、格式控制"><a href="#空格、换行符、格式控制" class="headerlink" title="空格、换行符、格式控制"></a>空格、换行符、格式控制</h3><ul><li><code>\u0020</code> 空格符</li><li><code>\u0009</code> 水平制表符</li><li><code>\u000B</code> 垂直制表符</li><li><code>\u000C</code> 换页符</li><li><code>\u00A0</code> 不中断空白符</li><li><code>\uFEFF</code> 字节标记</li><li><code>\u000A</code> 换行符</li><li><code>\u000D</code> 回车符</li><li><code>\u2028</code> 行分隔符</li><li><code>\u2029</code> 段分隔符</li><li><code>\u200F</code> 格式控制符</li><li><code>\u200E</code> 格式控制符</li><li><code>\u200D</code> 零宽连接符</li><li><code>\uFEFF</code> 零宽非连接符<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2></li><li>单行注释</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br></pre></td></tr></table></figure><ul><li>单行段落注释</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这是一个段落注释*/</span></span><br></pre></td></tr></table></figure><ul><li>多行注释</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 多行注释</span></span><br><span class="line"><span class="comment">* 这里的注释可以连续写几行</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="直接量"><a href="#直接量" class="headerlink" title="直接量"></a>直接量</h2><p>直接量就是程序中直接使用的数据值，如：</p><ul><li>1.2 // 数字</li><li>“123” // 字符串</li><li>“string” // 字符串</li><li>true // 布尔值</li><li>/^/w+/g // 正则表达式直接量</li><li>null // 空</li><li><code>{name:&quot;Hiraku&quot;,age:12}</code> // 对象</li><li><code>[1,2,4]</code> // 数组</li></ul><h2 id="分号的问题"><a href="#分号的问题" class="headerlink" title="分号的问题"></a>分号的问题</h2><p>JavaScritp 使用分号(;)将语句和语句分开。JavaScript 并不是所有换行处都加分号，而是只有在缺少了分号就无法正确解析代码的时候，JavaScript才会填补分号。</p><p>如果当前语句和下一行语句无法合并解析，JavaScript 则在第一行后面填补分号，这是通用规则，但是有两个例外，一个是在涉及语句时，如果这三个关键字后紧跟着换行，JavaScript 则会在换行处填补分号。也就是说， return、break 和 continue 语句之后不能直接换行.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js 的词法结构是一套基本规则，用来描述如何使用 js 编程。它规定了如何变量名长什么样，如何写注释以及程序语句之间如何分隔。&lt;/p&gt;
    
    </summary>
    
      <category term="JS系列" scheme="http://yoursite.com/categories/JS%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js初识</title>
    <link href="http://yoursite.com/2015/05/30/js%E5%88%9D%E8%AF%86/"/>
    <id>http://yoursite.com/2015/05/30/js初识/</id>
    <published>2015-05-29T16:00:00.000Z</published>
    <updated>2018-05-30T02:33:14.061Z</updated>
    
    <content type="html"><![CDATA[<p>ECMAScript 是一种由 Ecma 国际前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association，制定的标准。 JavaScript 是由公司开发而成的，公司开发而成的一定是有一些问题，不便于其他的公司拓展和使用。所以欧洲的这个ECMA的组织，牵头制定 JavaScript 的标准，取名为 ECMAScript。简单来说 ECMAScript 不是一门语言，而是一个标准。符合这个标准的比较常见的有：JavaScript、Action Script（Flash中用的语言）。就是说，你JavaScript学完了，Flash中的程序也会写了。 ECMAScript 在 2015 年 6 月，发布了 ECMAScript 6 版本，语言的能力更强。</p><h2 id="javaScript概念、组成"><a href="#javaScript概念、组成" class="headerlink" title="javaScript概念、组成"></a>javaScript概念、组成</h2><p>概念：js是一门在客户端进行交互的网页编程语言.</p><p>一个完整的 JavaScript实现应该由下列三个部分组成：</p><ul><li>组成：<ul><li>ECMAScript js标准</li><li>Dom 可以利用JS操作网页元素</li><li>Bom 通过api来操作浏览器</li></ul></li></ul><a id="more"></a><h3 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript"></a>ECMAScript</h3><p>web 浏览器是 ECMAScript 实现可能的宿主环境之一，ECMAScript 规定了语言的的下列组成部分：</p><ul><li>语法</li><li>类型</li><li>语句</li><li>关键字</li><li>保留字</li><li>操作符</li><li>对象</li></ul><p>ECMAScript 就是对实现这个标准规定的各方面内容的语言描述。</p><h3 id="DOM-文档对象模型-简介"><a href="#DOM-文档对象模型-简介" class="headerlink" title="DOM 文档对象模型 简介"></a>DOM 文档对象模型 简介</h3><p>文档对象模型是针对 XML 但经过扩展用于 HTML 的应用程序编程接口。DOM 把整个页面映射为一个多层节点结构。HTML 或 XML 页面中的每个组成部分都是某种类型的节点，这些节点又包含不同的数据类型的数据。</p><h3 id="BOM-浏览器对象模型-简介"><a href="#BOM-浏览器对象模型-简介" class="headerlink" title="BOM 浏览器对象模型 简介"></a>BOM 浏览器对象模型 简介</h3><p>BOM 只处理浏览器窗口和框架，习惯上把所有针对浏览器的 JavaScrip 扩展算作 BOM 的一部分。如：</p><ul><li>弹出新浏览器窗口</li><li>移动、缩放和关闭浏览器窗口的功能</li><li>提供浏览器信息信息的 navigator 对象</li><li>提供浏览器所加载页面详细信息的 location 对象</li><li>提供用户显示器分辨率详细信息的 screen 对象</li><li>对 cookie 的支持</li><li>像 XMLHttpRequest 和 IE 的 ActiveXObject 这样的自定义对象</li></ul><p>由于没 BOM 统一标准，所以各个浏览器都有自己的实现功能，尽管各规定浏览器都实现 <code>window</code> 对象和 <code>navigator</code> 对象；</p><ul><li>JavaScript 的特点<ul><li>简单易用</li><li>基于对象</li><li>基于过程</li><li>解释执行：js引擎来执行源代码 ， node 平台</li></ul></li><li>编译执行类语言有：Java c# 源代码 ==&gt; 可执行文件.dll ==&gt; 电脑执行.dll课执行文件</li><li>使用范围：<ul><li>表单验证</li><li>轮播图特效</li><li>游戏开发</li></ul></li></ul><h2 id="lt-script-gt-lt-script-gt-元素"><a href="#lt-script-gt-lt-script-gt-元素" class="headerlink" title="&lt;script&gt;&lt;/script&gt;元素"></a><code>&lt;script&gt;&lt;/script&gt;</code>元素</h2><p><code>&lt;script&gt;&lt;/script&gt;</code> 定义了6个属性</p><ul><li>async: 可选。立即下载脚标，对页面中其他元素没有影响。只对外部脚标文件有效</li><li>charset: 可选。 表示通过 src 属性指定的代码的字符集。大多数浏览器会忽略其值，很少用</li><li>defer：可选。 表示脚本可以延迟到文档完全被解析和显示之后再执行。只对外部脚本有效</li><li>language: 已废弃。</li><li>src：可选。要执行的外部文件</li><li>type：可选。考虑到最大程度的兼容，使用 <code>&quot;text/javascript&quot;</code></li></ul><h3 id="js书写位置"><a href="#js书写位置" class="headerlink" title="js书写位置"></a>js书写位置</h3><ul><li>内嵌式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>js 书写位置<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  // js 代码段</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>外链式写法<ul><li>新建一个js文件</li><li>通过script标签里的src=”1.js”属性将JS文件调入到当前页面。</li></ul></li></ul><p>补充内嵌式写法：推荐Js代码最好放在body结束标签的后边。</p><h3 id="在XHTML中的用法"><a href="#在XHTML中的用法" class="headerlink" title="在XHTML中的用法"></a>在XHTML中的用法</h3><p>XHTML 即可扩展的超文本标记语言，是将 HTML 作为 XML 的应用重新定义的一个标准。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">// &lt;![CDATA[</span></span><br><span class="line"><span class="undefined">  funciton foo()&#123;</span></span><br><span class="line"><span class="undefined">    // 代码段</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">//]]&gt;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文档模式"><a href="#文档模式" class="headerlink" title="文档模式"></a>文档模式</h2><p>doctype: 标准模式、混杂模式</p><p>严格模式开启：<code>use strict;</code></p><h2 id="页面中输出消息的几种方式"><a href="#页面中输出消息的几种方式" class="headerlink" title="页面中输出消息的几种方式"></a>页面中输出消息的几种方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"信息"</span>)   在页面出现一个弹出框，将信息弹出。</span><br><span class="line">confirm(<span class="string">"信息"</span>) 在页面出现一个弹出框，将信息显示，常与<span class="keyword">if</span>判断语句结合使用。</span><br><span class="line">prompt(<span class="string">"信息"</span>)  弹出一个文本框，可以在文本框接收内容。常用于接收信息。</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"信息"</span>)将信息输出到控制台，常用于代码调试。</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"信息"</span>) 直接在页面输出消息。</span><br></pre></td></tr></table></figure><p>注：document.write(“信息”)，不仅可以输出内容，还可以输出html标签。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ECMAScript 是一种由 Ecma 国际前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association，制定的标准。 JavaScript 是由公司开发而成的，公司开发而成的一定是有一些问题，不便于其他的公司拓展和使用。所以欧洲的这个ECMA的组织，牵头制定 JavaScript 的标准，取名为 ECMAScript。简单来说 ECMAScript 不是一门语言，而是一个标准。符合这个标准的比较常见的有：JavaScript、Action Script（Flash中用的语言）。就是说，你JavaScript学完了，Flash中的程序也会写了。 ECMAScript 在 2015 年 6 月，发布了 ECMAScript 6 版本，语言的能力更强。&lt;/p&gt;
&lt;h2 id=&quot;javaScript概念、组成&quot;&gt;&lt;a href=&quot;#javaScript概念、组成&quot; class=&quot;headerlink&quot; title=&quot;javaScript概念、组成&quot;&gt;&lt;/a&gt;javaScript概念、组成&lt;/h2&gt;&lt;p&gt;概念：js是一门在客户端进行交互的网页编程语言.&lt;/p&gt;
&lt;p&gt;一个完整的 JavaScript实现应该由下列三个部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组成：&lt;ul&gt;
&lt;li&gt;ECMAScript js标准&lt;/li&gt;
&lt;li&gt;Dom 可以利用JS操作网页元素&lt;/li&gt;
&lt;li&gt;Bom 通过api来操作浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JS系列" scheme="http://yoursite.com/categories/JS%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>HTML元素分类、伪类、背景图片</title>
    <link href="http://yoursite.com/2015/05/28/HTML%E5%85%83%E7%B4%A0%E5%88%86%E7%B1%BB%E3%80%81%E4%BC%AA%E7%B1%BB%E3%80%81%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2015/05/28/HTML元素分类、伪类、背景图片/</id>
    <published>2015-05-27T16:00:00.000Z</published>
    <updated>2018-05-30T01:59:36.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS-Cascading-style-sheets写法"><a href="#CSS-Cascading-style-sheets写法" class="headerlink" title="CSS Cascading style sheets写法"></a>CSS Cascading style sheets写法</h2><ul><li>内嵌式</li><li><p>外链式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"1.css"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>行内样式</p></li></ul><a id="more"></a><h3 id="三种样式写法的区别"><a href="#三种样式写法的区别" class="headerlink" title="三种样式写法的区别"></a>三种样式写法的区别</h3><ul><li>内嵌样式表：<ul><li>影响范围限于当前页面，其他页面无效，不能真正实现结构和表现解耦</li></ul></li><li>外链样式表<ul><li>影响范围大，是整个站点，实现真正的结构表现分离</li></ul></li><li>行内样式表：<ul><li>仅限于当前标签，作用范围小。结构和表现完全耦合</li></ul></li></ul><h3 id="link和-import区别"><a href="#link和-import区别" class="headerlink" title="link和@import区别"></a>link和@import区别</h3><ul><li>link属于HTML标签，而@import是CSS提供的</li><li>页面加载时，link会同时加载，而@import引入的CSS要等到页面中的所有元素加载完再加载</li><li>@import有兼容性，而link是HTML标签，无兼容性问题</li><li>link方式的样式的权重高于@import的权重</li><li>link引入的CSS支持js修改样式，而@import导入的CSS不能被js代码修改样式；</li></ul><h2 id="html分类（显示方式）"><a href="#html分类（显示方式）" class="headerlink" title="html分类（显示方式）"></a>html分类（显示方式）</h2><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>最常用的有： <code>div</code>,<code>p</code>, <code>li</code>, <code>h1-h6</code></p><p>特点：</p><ul><li>独占一行</li><li>可以定义宽度和高度</li><li>包含关系的时候，父元素和子元素都为块元素的时候，子元素的宽度等于父元素的宽度</li></ul><h3 id="行内元素（内联元素）"><a href="#行内元素（内联元素）" class="headerlink" title="行内元素（内联元素）"></a>行内元素（内联元素）</h3><p>典型代表：strong span a em b del s ins i u</p><p>特点：</p><ul><li>不能设置宽高，</li><li>宽高度由内容撑开</li><li>在一行上显示</li></ul><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>典型代表<code>img</code> <code>input</code></p><p>特点：</p><ul><li>在一行显示</li><li>可以定义宽高</li></ul><h3 id="元素之间的转换"><a href="#元素之间的转换" class="headerlink" title="元素之间的转换"></a>元素之间的转换</h3><ul><li>行内元素转成块级元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display:block;</span><br></pre></td></tr></table></figure><ul><li>块级元素转成行内元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display:inline-block;</span><br></pre></td></tr></table></figure><ul><li>块元素转成行内元素</li><li>块、行内元素转成行内块元素</li></ul><h2 id="css特性"><a href="#css特性" class="headerlink" title="css特性"></a>css特性</h2><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>当样式属性冲突时，执行时是最后面样式。和标签调用顺序无关。</p><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><ul><li>条件：包含关系</li><li>普遍性：文本大小、字体、粗细、颜色、行高、风格样式被继承</li><li><p>特殊性：</p><ul><li>标题标签不会继承，但受父级元素的影响，文字大小。</li><li>a标签不会继承父元素的文字颜色。</li></ul></li><li><p>不可继承的：display、margin、border、padding、background、height、min-height、max-height、width、min-width、max-width、overflow、position、left、right、top、bottom、z-index、float、clear、table-layout、vertical-align、page-break-after、page-bread-before和unicode-bidi。</p></li><li><p>所有元素可继承：visibility和cursor。</p></li><li>内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、font-family、font-size、font-style、font-variant、font-weight、text-decoration、text-transform、direction。</li><li>终端块状元素可继承：text-indent和text-align。</li><li>列表元素可继承：list-style、list-style-type、list-style-position、list-style-image。</li><li>文字的所有属性可以继承，行高也可以继承, 但a标签不继承文字颜色</li></ul><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><ul><li>!important &gt; 行内样式 &gt; id选择器 &gt; 类选择器 &gt; 标签选择器 &gt; 默认</li><li>1000以上 1000 100 10 1 0</li></ul><p>继承的权重为0, 权重会叠加</p><h2 id="连接伪类"><a href="#连接伪类" class="headerlink" title="连接伪类"></a>连接伪类</h2><p><code>a:link{属性:值;}</code>, 没有点击时默认状态 a{属性:值;} 一般写这个</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a:link&#123;</span><br><span class="line">  /*连接默认状态*/</span><br><span class="line">  属性:值;</span><br><span class="line">&#125;</span><br><span class="line">a:visited&#123;</span><br><span class="line">  /*连接访问之后的状态*/</span><br><span class="line">  属性:值;</span><br><span class="line">&#125;</span><br><span class="line">a:hover&#123;        </span><br><span class="line">  /*鼠标放上去显示的状态*/</span><br><span class="line">  属性:值;</span><br><span class="line">&#125;</span><br><span class="line">a:active&#123;</span><br><span class="line">  /*连接激活的状态*/</span><br><span class="line">  属性:值;</span><br><span class="line">&#125;</span><br><span class="line">a:focus&#123;</span><br><span class="line">  /*获取较大*/</span><br><span class="line">  属性:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：连接伪类的顺序不能错；</p><ul><li>text-decoration 文本修饰</li><li>text-decoration: none; 去掉a标签的默认样式的下划线</li><li>text-decoration: underline; 加上下划线</li><li>text-decoration: line-through; 删除线</li></ul><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>background-color</li></ul><h3 id="background-image"><a href="#background-image" class="headerlink" title="background-image"></a>background-image</h3><ul><li>background-repeat 背景图片沿着x轴平铺</li><li>background-position left|right|top|bottom|center 背景定位写具体方位的时候，书写顺序没有限制</li><li>background-attchment scroll|fixed<ul><li>scroll 背景滚动 默认</li><li>fixed 背景固定</li></ul></li></ul><h3 id="背景属性连写"><a href="#背景属性连写" class="headerlink" title="背景属性连写"></a>背景属性连写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: color imge repeat position attachment</span><br></pre></td></tr></table></figure><p>特点：没有顺序要求</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS-Cascading-style-sheets写法&quot;&gt;&lt;a href=&quot;#CSS-Cascading-style-sheets写法&quot; class=&quot;headerlink&quot; title=&quot;CSS Cascading style sheets写法&quot;&gt;&lt;/a&gt;CSS Cascading style sheets写法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;内嵌式&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外链式&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1.css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;行内样式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CSS系列" scheme="http://yoursite.com/categories/CSS%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS样式表、CSS选择器</title>
    <link href="http://yoursite.com/2015/05/26/CSS%E6%A0%B7%E5%BC%8F%E8%A1%A8%E3%80%81CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://yoursite.com/2015/05/26/CSS样式表、CSS选择器/</id>
    <published>2015-05-25T16:00:00.000Z</published>
    <updated>2018-05-30T01:33:31.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="样式表的书写位置"><a href="#样式表的书写位置" class="headerlink" title="样式表的书写位置"></a>样式表的书写位置</h2><p>写在 <code>&lt;head&gt;&lt;/head&gt;</code> 中, 样式：选择器{属性:值;属性:值; }<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>样式表写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"texr/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">     样式表内容</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="样式表的常见属性"><a href="#样式表的常见属性" class="headerlink" title="样式表的常见属性"></a>样式表的常见属性</h3><ul><li>width 宽度 width:200px;</li><li>height 高度 height:200px;</li><li>background-color 背景色 background-color:red;</li><li>font-size 文字大小 font-size:20px;</li><li>color 文本颜色(前景色) color:yellow;</li><li>text-align 内容的水平对齐方式 text-align:left|center|right</li><li>text-indent 首行缩进 text-indent:2em;（2个汉字的大小）</li></ul><h4 id="常见属性表格"><a href="#常见属性表格" class="headerlink" title="常见属性表格"></a>常见属性表格</h4><table><thead><tr><th>属性</th><th style="text-align:right">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>width</td><td style="text-align:right">20px</td><td style="text-align:center">宽</td></tr><tr><td>height</td><td style="text-align:right">300px</td><td style="text-align:center">高</td></tr><tr><td>background-color</td><td style="text-align:right">red</td><td style="text-align:center">背景色</td></tr><tr><td>text-align</td><td style="text-align:right">left/center/right</td><td style="text-align:center">内容水平对齐方式</td></tr><tr><td>text-indent</td><td style="text-align:right">2em/px/%</td><td style="text-align:center">首行缩进</td></tr><tr><td>font-size</td><td style="text-align:right">normal/bold</td><td style="text-align:center">文本大小</td></tr><tr><td>font-weight</td><td style="text-align:right">100-900/bold</td><td style="text-align:center">文本粗细</td></tr><tr><td>font-style</td><td style="text-align:right">normal/italic</td><td style="text-align:center">文本风格</td></tr><tr><td>font-family</td><td style="text-align:right">宋体</td><td style="text-align:center">字体</td></tr><tr><td>line-height</td><td style="text-align:right">1.5/2em/px/%</td><td style="text-align:center">行高</td></tr></tbody></table><h4 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h4><p>行高 浏览器默认文字大小 div 1350px*18px</p><ul><li>行高=文本+上边距+下边距</li><li>默认文字大小是16px</li><li>默认行高大小是18px<br>一行文字，行高与父元素高度一致时，文本垂直居中对齐。</li></ul><p>行高的单位<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">行高值 文字大小  行高大小</span><br><span class="line">40px   20px      40px</span><br><span class="line">2em    20px      40px</span><br><span class="line">150%   20px      30px</span><br><span class="line">3      20px      60px</span><br></pre></td></tr></table></figure></p><p>总结：</p><p>当给父元素设置行高的时候，除了以px为单位以外，其他的值都与文字大小有关，是与文字大小的乘积, 行高是可以继承。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">父元素行高 父元素文字大小 子元素文字大小 子元素行高</span><br><span class="line">40px       20px           30px            40px</span><br><span class="line">2em        20px           30px            40px</span><br><span class="line">150%       20px           30px            30px</span><br><span class="line">3          20px           30px            90px</span><br></pre></td></tr></table></figure><h4 id="文本基线"><a href="#文本基线" class="headerlink" title="文本基线"></a>文本基线</h4><h2 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h2><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><ul><li>写法：标签{属性值;}</li><li><p>特点：标签选择器定义之后，会将页面所有的元素都执行这个样式<br>颜色的显示方式：</p></li><li><p>直接写颜色名称： 如： “red”；</p></li><li>16进制显示 由0-9和a-ff一共16个值组成；#ff0000;<ul><li>#ff0000,前边2个数值对应的是红色,</li><li>#00ff00,中间2个对应的是绿色,</li><li>#0000ff,后边2个对应的是蓝色。</li></ul></li><li>RGB表示颜色<ul><li>如：span{color: rgb(23,23,23); }</li><li>r代表红色，g绿色 b蓝色</li></ul></li><li>rgba 表示不透明度<ul><li>如：h1{width: 500px; height: 400px; color: rgba(121,232,108,0.5); }</li><li>a代标alpha 0-1;</li></ul></li></ul><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><ul><li>写法：自定义类名{属性:值;}</li><li>特点：类选择器需要调用才能生效，谁调用谁生效<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;width: 200px; height: 40px; color: yellow; background-color: rgb(24,124,101); text-align: center; font-size: 24px; &#125;</span><br></pre></td></tr></table></figure></li></ul><p>多标签可以调用同一个类选择器<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box baby"</span>&gt;</span>加油努力奋斗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>类选择器的命名规则</p><ul><li>不能使用纯数字和纯数字开头来定义类名</li><li>不建议使用中文</li><li>不能使用特殊符号来定义类名（“_”除外）</li><li>不建议使用标签名和属性名来定义类名</li></ul><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><ul><li><p>写法： #名称{属性:值}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#box&#123;width: 300px; height: 200px; background-color: pink; font-size: 20px; &#125;</span><br></pre></td></tr></table></figure></li><li><p>特点: id选择器需要调用才能生效，谁调用谁生效</p><ul><li>一个标签不能调用多个ID选择器</li><li>一个id选择器在一个页面内只能调用一次，多次调用不符合w3c规范，配合js使用，若出现多次js调用则会出错</li></ul></li></ul><h3 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h3><ul><li>写法：*{属性:值;}</li><li>特点：<ul><li>浏览器累死了，消耗服务器资源，不推荐使用；</li><li>会将所有的标签都执行这个通配符选择器</li></ul></li></ul><h2 id="文本介绍"><a href="#文本介绍" class="headerlink" title="文本介绍"></a>文本介绍</h2><h3 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h3><ul><li>文本属性<ul><li>font-size 文字大小</li><li>font-weight 文字的粗细 值从100-900; 700的值和bold大约一样(用700,不用bold)</li><li>font-style 文本风格： nomarl |italic</li><li>font-family 字体：宋体，微软雅黑，楷体</li><li>line-height 行高</li></ul></li></ul><h3 id="文本属性连写"><a href="#文本属性连写" class="headerlink" title="文本属性连写"></a>文本属性连写</h3><p>顺序：<code>font: font-style font-weight font-size/line-height font-family</code></p><p>注：按照顺序写，文字大小和字体在文字连写的时候为必须写的属性</p><h3 id="字体的表达方式"><a href="#字体的表达方式" class="headerlink" title="字体的表达方式"></a>字体的表达方式</h3><ul><li>直接写中文字体（宋体|微软雅黑）</li><li>直接写字体的英文名字（simsun|microsoft yahei|）</li><li>Unicode编码方式<ul><li>在浏览器中查找Unicode编码</li><li>chrome–&gt;f12–&gt;console–&gt;escape(“宋体”)–&gt;enter</li></ul></li></ul><h3 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h3><p>两个或两个以上的选择器通过不同的方式连接到一起</p><h4 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h4><ul><li>写法 <code>标签+类(id){属性:值}</code></li><li>特点：既…又的关系</li></ul><h4 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h4><ul><li>写法： <code>选择器+空格+选择器+空格+选择器{属性:值;}</code></li><li>注意：后代选择器首先要满足包含（嵌套关系）。</li><li>特点：<ul><li>可以无限制隔代。</li><li>只要能代表父子关系，标签选择器、类选择器、id选择器可以任意组合</li><li>父级元素在前面，子级元素在后面</li></ul></li></ul><h4 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h4><ul><li>写法：选择器&gt;选择器{属性:值;}</li><li>特点：选中的是直接下一级</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">   div&gt;span&#123;</span></span><br><span class="line"><span class="undefined">     color: red;</span></span><br><span class="line"><span class="undefined">     font-size: 36px;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">        愿使岁月静好，现世安稳。</span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>天才在左疯子在右<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h4><p>将不同选择器之间相同的样式写在一起，选择器之间通过逗号链接在一起。</p><ul><li>可能是包含关系，也可能是并列关系。</li><li>如果标签样式相同或者部分相同，可以用并集选择器，通过逗号连接在一起</li><li>选择器+,+选择器{属性:值;}</li><li>特点：并集选择器不一定是并列关系</li><li>标签选择器、类选择器、id选择器、复合选择器，可以通过逗号任意组合连接在一起</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.one,.one .two, .three, p&#123;font-size: 50px; font-weight: normal; &#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span>明媚的心<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>天才，和蠢材的差别是勤奋<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"three"</span>&gt;</span>美丽的人生要靠努力<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;样式表的书写位置&quot;&gt;&lt;a href=&quot;#样式表的书写位置&quot; class=&quot;headerlink&quot; title=&quot;样式表的书写位置&quot;&gt;&lt;/a&gt;样式表的书写位置&lt;/h2&gt;&lt;p&gt;写在 &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; 中, 样式：选择器{属性:值;属性:值; }&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;样式表写法&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;texr/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;     	样式表内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  	 &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS系列" scheme="http://yoursite.com/categories/CSS%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="CSS3" scheme="http://yoursite.com/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>HTML表格、表单、标签语义化</title>
    <link href="http://yoursite.com/2015/05/22/HTML%E8%A1%A8%E6%A0%BC%E3%80%81%E8%A1%A8%E5%8D%95%E3%80%81%E6%A0%87%E7%AD%BE%E8%AF%AD%E4%B9%89%E5%8C%96/"/>
    <id>http://yoursite.com/2015/05/22/HTML表格、表单、标签语义化/</id>
    <published>2015-05-21T16:00:00.000Z</published>
    <updated>2018-05-30T01:34:45.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML5标签结构"><a href="#HTML5标签结构" class="headerlink" title="HTML5标签结构"></a>HTML5标签结构</h2><p>sublime 快捷键 <code>!+Tab</code> 可以写成HTML5结构</p><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><ul><li>ASCLL</li><li>ansi</li><li>unicode</li><li>GBK</li><li>GB2312(中文简体)</li><li>BIG5(只支持繁体字)</li><li>UTF-8(国际通用编码)</li></ul><a id="more"></a><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">标签说明</span><br><span class="line">  <span class="comment">&lt;!--编码--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--关键字--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"java培训, ios"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--name 页面里面的关键词 content 里面是给SEO用的--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--网页描述--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"给搜索引擎看的，可以看得到的内容"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--网页重定向--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"5;http:www.itcast.com"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="link标签"><a href="#link标签" class="headerlink" title="link标签"></a>link标签</h3><p>调用外部样式表：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"1.css"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>ico小图标，在网页显示时的标题的前面：(必用)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"../favicom.ico"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="简单表格"><a href="#简单表格" class="headerlink" title="简单表格"></a>简单表格</h2><p>用来存放数据的，表格是对网页重构（css+div）一个有有益补充</p><ul><li>行 <code>tr</code></li><li>列 <code>td</code></li></ul><h3 id="简单结构（1行2列）"><a href="#简单结构（1行2列）" class="headerlink" title="简单结构（1行2列）"></a>简单结构（1行2列）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格属性介绍"><a href="#表格属性介绍" class="headerlink" title="表格属性介绍"></a>表格属性介绍</h3><ul><li>边框 border=”1”</li><li>宽度 width=”300”</li><li>高度 height=”100”</li><li>单元格与单元格的距离 cellspacing=”2”，默认值2</li><li>内容到边框的距离cellpadding=”2” 默认值0</li><li>背景色 bgcolor=”yellow”</li><li>对齐方式 align left|center|right<ul><li>如果align放到tr或者td里面是内容的对齐方式</li><li>如果align放到table里面，是表格的对齐方式</li></ul></li><li>表格标题 用法和td一样</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表头<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span> 表格的标题</span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格的标准结构"><a href="#表格的标准结构" class="headerlink" title="表格的标准结构"></a>表格的标准结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格单元格的合并"><a href="#表格单元格的合并" class="headerlink" title="表格单元格的合并"></a>表格单元格的合并</h3><ul><li>在同一行上合并 colspan=”2”</li><li>在同一列上合并</li></ul><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>用来收集信息</p><ul><li>提示信息</li><li>表单控件<ul><li>action：用来处理信息（信息提交给谁，把文件提交给那个文件处理）</li><li>method：get|post 传递信息的方法</li></ul></li></ul><p>get 安全性很低，通过浏览器的地址栏传递信息，post 安全性高，通过action文件处理，它们的区别如下</p><p>1.GET没有请求主体，使用xhr.send(null)<br>2.GET可以通过在请求URL上添加请求参数<br>3.POST可以通过xhr.send(‘name=itcast&amp;age=10’)<br>4.POST需要设置<br>5.GET效率更好（应用多）<br>6.GET大小限制约4K，POST则没有限制</p><h3 id="表单控件"><a href="#表单控件" class="headerlink" title="表单控件"></a>表单控件</h3><pre><code>1 &lt;form action=&quot;1.php&quot; method=&quot;post&quot;&gt;&lt;/form&gt;</code></pre><h4 id="单行文本输入框"><a href="#单行文本输入框" class="headerlink" title="单行文本输入框"></a>单行文本输入框</h4><pre><code>1 &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;Hiraku&quot; maxlength=&quot;16&quot; readonly=&quot;readonly&quot; &gt;</code></pre><ul><li>name 文本输入框的名字</li><li>value 接收的默认值 文本框的值</li><li>maxlength 输入的最大字符长度</li><li>readonly 输入框为只读状态</li><li>disabled 输入框为未激活状态</li></ul><h4 id="密码输入框"><a href="#密码输入框" class="headerlink" title="密码输入框"></a>密码输入框</h4><pre><code>1 &lt;input type=&quot;password&quot; name=&quot;密码输入框&quot;&gt; </code></pre><p>单行文本输入框的属性对密码输入框都适用</p><h4 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h4><pre><code>1 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; checked=&quot;checked&quot;&gt;男2 &lt;input type=&quot;radio&quot; name=&quot;gender&quot;&gt;女</code></pre><p>当将单选框name值设置相同的时候才能实现单选效果, checked 设置默认选中项。</p><h4 id="下拉列表"><a href="#下拉列表" class="headerlink" title="下拉列表"></a>下拉列表</h4><p>下拉列表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">”selected”</span>&gt;</span>下拉列表选项<span class="tag">&lt;/<span class="name">option</span>&gt;</span>   </span><br><span class="line">  <span class="comment">&lt;!--设置默认选项--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- multiple="mutiple" 下拉列表多选 设置下拉列表为多选项 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"甘肃省"</span>&gt;</span>   对下拉列表进行分组</span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>定西市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>兰州市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>庆阳市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>天水市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>嘉峪关<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>酒泉市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>动漫</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>电影</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>电子竞技</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>音乐</span><br></pre></td></tr></table></figure><p>checked 默认选项</p><h4 id="多文本输入框"><a href="#多文本输入框" class="headerlink" title="多文本输入框"></a>多文本输入框</h4><pre><code>1    &lt;textarea name=&quot;输入框&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</code></pre><ul><li>cols 输入字符的长度</li><li>rows 输入字符的行数</li></ul><h4 id="上传文件控件"><a href="#上传文件控件" class="headerlink" title="上传文件控件"></a>上传文件控件</h4><pre><code>1    &lt;input type=&quot;file&quot;&gt;</code></pre><h4 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h4><pre><code>1    &lt;input type=&quot;submit&quot;&gt;</code></pre><h4 id="普通按钮"><a href="#普通按钮" class="headerlink" title="普通按钮"></a>普通按钮</h4><pre><code>1    &lt;input type=&quot;button&quot; value=&quot;普通按钮&quot;&gt;</code></pre><p>普通按钮不能实现表单信息提交，常配合js使用</p><h4 id="图片按钮"><a href="#图片按钮" class="headerlink" title="图片按钮"></a>图片按钮</h4><pre><code>1    &lt;input type=&quot;image&quot; src=&quot;&quot;&gt;</code></pre><h4 id="表单信息分组"><a href="#表单信息分组" class="headerlink" title="表单信息分组"></a>表单信息分组</h4><pre><code>1    &lt;form&gt;2    &lt;fieldset&gt;3    &lt;legend&gt;注册信息&lt;/legend&gt;4    &lt;input&gt;5    &lt;/fieldset&gt;6    &lt;/form&gt;</code></pre><h4 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h4><pre><code>1    &lt;input type=”reset” value=”重置信息”&gt;</code></pre><h3 id="HTML5表单控件"><a href="#HTML5表单控件" class="headerlink" title="HTML5表单控件"></a>HTML5表单控件</h3><pre><code>1    &lt;form action=&quot;1.php&quot; method=&quot;post&quot;&gt;2        &lt;!-- 判断网址 --&gt;3        &lt;input type=&quot;url&quot;&gt;&lt;br/&gt;&lt;br/&gt;4        &lt;!-- 判断邮箱 --&gt;5        &lt;input type=&quot;email&quot;&gt;&lt;br/&gt;&lt;br/&gt;6        &lt;!-- 日期控件 --&gt;7        &lt;input type=&quot;date&quot;&gt;&lt;br/&gt;&lt;br/&gt;8        &lt;!-- 时间控件 --&gt;9        &lt;input type=&quot;time&quot;&gt;&lt;br/&gt;&lt;br/&gt;10        &lt;!-- 数字控件 --&gt;11        &lt;input type=&quot;number&quot;&gt;&lt;br/&gt;&lt;br/&gt;12        &lt;!-- 滑块控件 --&gt;13        &lt;input type=&quot;range&quot; max=&quot;150&quot; min=&quot;2&quot; step=&quot;5&quot;&gt;&lt;br/&gt;&lt;br/&gt;14        &lt;input type=&quot;submit&quot;&gt;15    &lt;/form&gt;</code></pre><h2 id="标签语义化"><a href="#标签语义化" class="headerlink" title="标签语义化"></a>标签语义化</h2><p>标签语义化即：根据内容的结构化（内容语义化），选择合适的标签</p><p>注意事项：</p><ul><li>尽可能少的使用无语义的标签div和span</li><li>在语义不明显是尽量用p,即可使用div也可使用p</li><li>不要使用纯样式标签:</li><li>需要强调的文本尽量用和</li></ul><p>好的标签语义化网站：去掉CSS，结构依然很清晰</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML5标签结构&quot;&gt;&lt;a href=&quot;#HTML5标签结构&quot; class=&quot;headerlink&quot; title=&quot;HTML5标签结构&quot;&gt;&lt;/a&gt;HTML5标签结构&lt;/h2&gt;&lt;p&gt;sublime 快捷键 &lt;code&gt;!+Tab&lt;/code&gt; 可以写成HTML5结构&lt;/p&gt;
&lt;h3 id=&quot;字符编码&quot;&gt;&lt;a href=&quot;#字符编码&quot; class=&quot;headerlink&quot; title=&quot;字符编码&quot;&gt;&lt;/a&gt;字符编码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ASCLL&lt;/li&gt;
&lt;li&gt;ansi&lt;/li&gt;
&lt;li&gt;unicode&lt;/li&gt;
&lt;li&gt;GBK&lt;/li&gt;
&lt;li&gt;GB2312(中文简体)&lt;/li&gt;
&lt;li&gt;BIG5(只支持繁体字)&lt;/li&gt;
&lt;li&gt;UTF-8(国际通用编码)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="HTML系列" scheme="http://yoursite.com/categories/HTML%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>初识HTML</title>
    <link href="http://yoursite.com/2015/05/20/%E5%88%9D%E8%AF%86HTML/"/>
    <id>http://yoursite.com/2015/05/20/初识HTML/</id>
    <published>2015-05-19T16:00:00.000Z</published>
    <updated>2018-05-30T01:34:19.190Z</updated>
    
    <content type="html"><![CDATA[<p>HTML基础</p><p>Hyper text markup language 超文本标记语言</p><ul><li>超文本：网页中可以包含图片、文字、视频、音频、文本框等元素;</li><li>标记（标签）：在网页中给网页元素做标记（右键，查看网页源代码）</li><li>超链接：实现页面之间的跳转</li></ul><h2 id="Sublime常用快捷键"><a href="#Sublime常用快捷键" class="headerlink" title="Sublime常用快捷键"></a>Sublime常用快捷键</h2><ul><li><code>windows+D</code> 返回桌面</li><li><code>windows+R</code> 运行dos</li><li><code>windows+E</code> 打开我的电脑</li><li><code>Alt+Tab</code> 切换软件</li><li><code>Ctrl+Tab</code> 软件内部文档间切换</li><li><code>F2</code> 重命名</li></ul><a id="more"></a><h2 id="Web标准"><a href="#Web标准" class="headerlink" title="Web标准"></a>Web标准</h2><ul><li>结构标准：<code>HTML</code> HyperText Mark Language 超文本标记语言</li><li>表现标准：<code>CSS</code> Casading Style Sheets 层次样式表</li><li>行为标准：<code>javaScript</code><ul><li>ECMAScript javaScript标准</li><li><code>DOM</code> Document Object Model 文档对象模型</li><li><code>BOM</code> Browser Object Model 浏览器对象模型</li></ul></li></ul><h2 id="浏览器简介"><a href="#浏览器简介" class="headerlink" title="浏览器简介"></a>浏览器简介</h2><p>浏览器涉及技术：浏览器内核，渲染引擎 <code>SEO</code>,Search Engine Optimization(搜索引擎优化)。</p><p>浏览器内核：分为两部分：渲染引擎和JS引擎，决定了浏览器如何显示网页的内容、页面格式等</p><ul><li>ie <code>trident</code></li><li>firefox <code>gecko</code></li><li>chrome/safari <code>webkit</code></li><li>chrome <code>blink</code></li><li>opera <code>persto</code></li></ul><h3 id="浏览器和服务器的那点事"><a href="#浏览器和服务器的那点事" class="headerlink" title="浏览器和服务器的那点事"></a>浏览器和服务器的那点事</h3><ul><li>http协议：超文本传输协议、浏览器和服务器之间的对话（通信的协议）。</li><li>https：加密的过程</li><li>url协议：规定url地址的格式</li><li>协议规定格式：scheme:定义因特网服务类型</li><li>host：定义域主机 端口：网页默认80端口</li><li>path：路径</li><li>filename： 文件名</li></ul><h2 id="HTML结构"><a href="#HTML结构" class="headerlink" title="HTML结构"></a>HTML结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">Doctype</span> <span class="attr">html</span>&gt;</span>   <span class="comment">&lt;!--声明文档类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="comment">&lt;!--根标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="comment">&lt;!--头部标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!--网页标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>网页主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!--网页主体标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">解析：</span><br><span class="line">  <span class="tag">&lt;<span class="name">!</span> <span class="attr">Doctype</span> <span class="attr">html</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">html</span>&gt;</span>             </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span>          </span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：文档的后缀名只能决定打开方式，不能修改文档类型</p><h3 id="HTML标签的分类"><a href="#HTML标签的分类" class="headerlink" title="HTML标签的分类"></a>HTML标签的分类</h3><ul><li>单标签<ul><li><code>&lt;! Doctype html&gt;</code></li><li><code>&lt;img src=&quot;&quot; alt=&quot;&quot;/&gt;</code></li></ul></li><li>双标签<ul><li><code>&lt;html&gt;&lt;/html&gt;</code></li><li><code>&lt;head&gt;&lt;/head&gt;</code></li><li><code>&lt;title&gt;&lt;/title&gt;</code></li><li><code>&lt;body&gt;&lt;/body&gt;</code></li><li>…</li></ul></li></ul><h3 id="HTML关系"><a href="#HTML关系" class="headerlink" title="HTML关系"></a>HTML关系</h3><ul><li>并列关系（同级）<ul><li><code>&lt;head&gt;&lt;/head&gt;</code> 和 <code>&lt;body&gt;&lt;/body&gt;</code></li></ul></li><li>包含关系（嵌套）<ul><li><code>&lt;head&gt;&lt;title&gt;标题&lt;/title&gt;&lt;/head&gt;</code></li></ul></li></ul><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ul><li><code>DreamWeaver</code>：很老的一个软件 偏设计师使用</li><li><code>Sublime</code>:轻量级的软件，有很多好用的插件</li><li><code>WebStorm</code>:重量级软件，功能强大</li></ul><h4 id="Sublime-常用的快捷键"><a href="#Sublime-常用的快捷键" class="headerlink" title="Sublime 常用的快捷键"></a>Sublime 常用的快捷键</h4><ul><li><code>html:xt + tab</code> html结构</li><li><code>html:5 + tab</code> html结构</li><li><code>Ctrl+shift+D</code> 快速复制</li><li><code>Ctrl+shift+K</code> 快速删除一行</li><li><code>Ctrl+shift+↑/↓</code> 快速上下移动一行</li><li><code>Tab</code> 补全标签</li><li><code>Ctrl+鼠标左键</code> 选中多行</li><li><code>Ctrl+L</code> 选中一行</li><li><code>Ctrl+H</code> 替换别的标签</li><li><code>Alt+shift+2</code> 查看布局</li><li><code>Alt+V</code> 显示/隐藏菜单栏</li><li><code>ctrl+shift+p</code> + <code>move</code>指令 移动文件</li></ul><h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><h3 id="单标签"><a href="#单标签" class="headerlink" title="单标签"></a>单标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1<span class="comment">&lt;!--注释: 快捷键Ctrl+/--&gt;</span> </span><br><span class="line">2<span class="tag">&lt;<span class="name">br</span>/&gt;</span>  换行</span><br><span class="line">3<span class="tag">&lt;<span class="name">hr</span>/&gt;</span>  水平线</span><br></pre></td></tr></table></figure><h3 id="双标签"><a href="#双标签" class="headerlink" title="双标签"></a>双标签</h3><ul><li>段落标签：<code>&lt;p&gt;&lt;/p&gt;</code></li><li>文本标签：<code>&lt;font&gt;&lt;/font&gt;</code></li><li>标题标签：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1<span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">2<span class="comment">&lt;!--h1只能出现一次，出现多了不利于搜索引擎--&gt;</span></span><br><span class="line">3<span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">4<span class="tag">&lt;<span class="name">h6</span>&gt;</span><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>标题系列取值只能取到h6</p><ul><li>文本格式化标签<ul><li>加粗 <strong></strong>, <b></b> 常用strong</li><li>倾斜 <em></em>, <i></i> 常用em</li><li>删除线标签 <del></del>, <s></s> 常用del</li><li>插入文本： <ins></ins>, <u></u> 常用ins</li><li>上下标标签：<sup></sup>, <sub></sub><br>注意：使用strong em del ins 更有意义</li></ul></li></ul><h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><p><code>&lt;img src=&quot;Legolas.jpg&quot; alt=&quot;我的男神&quot; title=&quot;legolas&quot; width=&quot;500&quot; /&gt;</code></p><p>仅指定宽或高时，等比例缩放。</p><ul><li><code>src</code> 图片来源（路径）, <code>alt</code> 替换文本.</li><li><code>title</code> 提示文本（鼠标放到图片上显示的文字;</li><li><code>width</code> 图片显示的宽度</li><li><code>height</code> 图片显示的高度</li></ul><p>相对路径和绝对路径（相对路径的可移植性好）</p><ul><li>相对路径：<ul><li>文档（html/图片）在同一个文件夹，直接写图片（文档）名字 <code>&lt;img src=&quot;Legolas.jpg&quot; alt=&quot;legolas&quot; height=&quot;300&quot; /&gt;</code></li><li>文档不在同一个文件夹，在上级文件中 <code>&lt;img src=&quot;../1.jpg&quot; alt=&quot;legolas&quot; height=&quot;300&quot; /&gt;</code></li><li>文档不在同一个文件夹，在上两级文件中 <code>&lt;img src=&quot;../../Hydrangeas.jpg&quot; alt=&quot;菊花&quot; height=&quot;300&quot; /&gt;</code></li><li>文档不在同一个文件夹，在下级文件中 <code>&lt;img src=&quot;pic/Koala.jpg&quot; alt=&quot;考拉&quot; height=&quot;300&quot; /&gt;</code></li><li>文档不在同一个文件夹，在下两级文件中 <code>&lt;img src=&quot;pic/photo/Penguins.jpg&quot; alt=&quot;企鹅&quot; height=&quot;300&quot; /&gt;</code></li></ul></li><li>绝对路径：<ul><li>本地电脑绝对路径 <code>&lt;img src=&quot;F:\pic\photo&quot; alt=&quot;企鹅&quot; /&gt;</code></li><li>互联网上的绝对路径： 网页中的图片来自服务器端传输过来的。</li></ul></li></ul><h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><p>超链接：<code>&lt;a href=&quot;06_test&quot; target=&quot;_blank&quot; title=&quot;气温高&quot;&gt;气温案例&lt;/a&gt;</code></p><ul><li><code>href</code> 去往的路径（连接的文档），必写属性。</li><li><code>target=” _self”</code> 关闭自身串口，打开新窗口</li><li><code>target=”_blank”</code> 自身窗口不关闭，打开新窗口</li><li><code>title</code> 提示文本，是非必须的</li><li><code>ctrl+shift+s:</code> 另存为 把文件复制并另存为</li></ul><p>超链接优化： <code>&lt;base target=”_blank”&gt;</code></p><ul><li>锚点：<ul><li>第一步：给标签加id</li><li>第二部：herf写上#+id名 <code>&lt;a href=&quot;#xd&quot;&gt;回到顶部&lt;/a&gt;</code></li></ul></li><li>压缩包：<code>&lt;a href=&quot;压缩包.rar&quot;&gt;压缩文件下载&lt;/a&gt;</code><ul><li>空连接：<code>&lt;a href=&quot;#&quot;&gt;此处有连接&lt;/a&gt;</code></li></ul></li></ul><h3 id="特殊字符：段落标签的写法"><a href="#特殊字符：段落标签的写法" class="headerlink" title="特殊字符：段落标签的写法"></a>特殊字符：段落标签的写法</h3><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><ul><li>无序列表 <ul type="square"></ul><ul><li>square 实心方块</li><li>dick 默认实心小圆圈</li><li>circle 空心小圆圈</li></ul></li></ul><p>注意：ul标签里面只能放li标签，li里面可以放任何标签</p><ul><li>有序列表</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1<span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">2  <span class="tag">&lt;<span class="name">li</span>&gt;</span>打开冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">3  <span class="tag">&lt;<span class="name">li</span>&gt;</span>把大象装在冰箱里<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">4  <span class="tag">&lt;<span class="name">li</span>&gt;</span>关上冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">5<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">6<span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"A"</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">7<span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">start</span>=<span class="string">"4"</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>type 的取值可以是1，a，A，i，I</p><p><code>start 是开始的序号</code></p><ul><li>自定义列表</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1<span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">2  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>  <span class="comment">&lt;!--小标题--&gt;</span></span><br><span class="line">3  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>昌平区<span class="tag">&lt;/<span class="name">dd</span>&gt;</span>  <span class="tag">&lt;<span class="name">!—标题的解释--</span>&gt;</span></span><br><span class="line">4<span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h3><ul><li>音乐标签 embed 背景音乐 <code>&lt;embed src=&quot;BIGBANG - BAD BOY (Live).mp3&quot; hidden=&quot;false&quot; /&gt;</code><ul><li>hidden = “ture” 影藏，默认是false，播放器</li></ul></li><li>滚动标签 <code>&lt;marquee behavior=&quot;scroll&quot; direction=&quot;right&quot; width=&quot;500px&quot; height=&quot;100px&quot; bgcolor=&quot;blue&quot;&gt;我来也&lt;/marquee&gt;</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML基础&lt;/p&gt;
&lt;p&gt;Hyper text markup language 超文本标记语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超文本：网页中可以包含图片、文字、视频、音频、文本框等元素;&lt;/li&gt;
&lt;li&gt;标记（标签）：在网页中给网页元素做标记（右键，查看网页源代码）&lt;/li&gt;
&lt;li&gt;超链接：实现页面之间的跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Sublime常用快捷键&quot;&gt;&lt;a href=&quot;#Sublime常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;Sublime常用快捷键&quot;&gt;&lt;/a&gt;Sublime常用快捷键&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;windows+D&lt;/code&gt; 返回桌面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;windows+R&lt;/code&gt; 运行dos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;windows+E&lt;/code&gt; 打开我的电脑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt+Tab&lt;/code&gt; 切换软件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+Tab&lt;/code&gt; 软件内部文档间切换&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F2&lt;/code&gt; 重命名&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="HTML系列" scheme="http://yoursite.com/categories/HTML%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
</feed>
